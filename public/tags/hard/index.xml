<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>hard on Evan Hossain</title>
    <link>https://evan-hossain.github.io/tags/hard/</link>
    <description>Recent content in hard on Evan Hossain</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 26 Feb 2023 20:34:43 +0000</lastBuildDate><atom:link href="https://evan-hossain.github.io/tags/hard/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Leetcode: Minimize Deviation in Array</title>
      <link>https://evan-hossain.github.io/kotlin/lc-minimize-deviation-in-array/</link>
      <pubDate>Sun, 26 Feb 2023 20:34:43 +0000</pubDate>
      
      <guid>https://evan-hossain.github.io/kotlin/lc-minimize-deviation-in-array/</guid>
      
        <description>1675. Minimize Deviation in Array A couple of things to notice.
Odd elements can only be changed once, which makes them even.</description>
      
    </item>
    
    <item>
      <title>Leetcode: Ipo</title>
      <link>https://evan-hossain.github.io/kotlin/lc-ipo/</link>
      <pubDate>Sun, 26 Feb 2023 20:01:44 +0000</pubDate>
      
      <guid>https://evan-hossain.github.io/kotlin/lc-ipo/</guid>
      
        <description>502. IPO Note that, at any point, if we know what is the most profitable project within our current budget, we can solve this problem.</description>
      
    </item>
    
    <item>
      <title>Leetcode: Lfu Cache Solution in Kotlin</title>
      <link>https://evan-hossain.github.io/kotlin/lc-lfu-cache/</link>
      <pubDate>Sun, 29 Jan 2023 11:41:00 +0000</pubDate>
      
      <guid>https://evan-hossain.github.io/kotlin/lc-lfu-cache/</guid>
      
        <description>460. LFU Cache This problem is pretty much about implementing the requirement. I chose to do it in a more object oriented way.</description>
      
    </item>
    
  </channel>
</rss>